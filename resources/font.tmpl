$(start_block_header)
/*******************************************************************************
* generated by lcd-image-converter rev.$(app_rev) from $(app_date)
* $(doc_data_type)
* filename: $(doc_filename)
* name: $(doc_name)
* family: $(fnt_family)
* size: $(fnt_size)
* style: $(fnt_style)
* included characters: $(fnt_string)
* antialiasing: $(fnt_antialiasing)
* type: $(fnt_width_type)
* encoding: $(fnt_encoding)
* unicode bom: $(fnt_use_bom)
*
* preset name: $(out_preset_name)
* data block size: $(img_data_block_size) bit(s), uint$(img_data_block_size)_t
* RLE compression enabled: $(img_rle)
* conversion type: $(pre_conv_type), $(pre_mono_type) $(pre_mono_edge)
* split to rows: $(img_split_to_rows)
* bits per pixel: $(out_bpp)
*
* preprocess:
*  main scan direction: $(pre_scan_main)
*  line scan direction: $(pre_scan_sub)
*  inverse: $(pre_inverse)
*******************************************************************************/

/*
#include <stdint.h>

typedef struct
{
  const uint8_t Width;   // width, in bits (or pixels), of the character
  const uint16_t Offset; // offset of the character's bitmap, in bytes, into the the FONT_Info's data array
} FONT_CharInfo;	

typedef struct
{
  const uint8_t         Height;	    // height, in pages (8 pixels), of the font's characters
  const uint8_t         StartChar;  // the first character in the font (e.g. in charInfo and data)
  const uint8_t         EndChar;    // the last character in the font
  const FONT_CHAR_INFO*	CharInfo;   // pointer to array of char information
  const uint$(img_data_block_size)_t*        Data;	    // pointer to generated array of character visual representation		
} FONT_Info;
*/$(end_block_header)

static const uint$(img_data_block_size)_t image_data_$(doc_name_ws)[] =
{$(start_block_images_table)
  $(out_image_preview)
  $(out_image_data)$(end_block_images_table)
};

static const FONT_CharInfo char_info_$(doc_name_ws)[] =
{$(start_block_images_table)
  {$(out_image_width), $(out_image_offset)}$(out_comma) // character: '$(out_char_text)' $(end_block_images_table)
};

$(start_block_font_def)const FONT_Info $(doc_name_ws) =
{
  $(out_images_max_height),
  '$(fnt_string_starts)',
  '$(fnt_string_ends)',
  char_info_$(doc_name_ws),
  image_data_$(doc_name_ws)
};$(end_block_font_def)
